name: Backend Tests

on:
  push:
    paths:
      - 'backend/**'
    branches: [ main ]
  pull_request:
    paths:
      - 'backend/**'
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.TEST_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libpq-dev \
          python3-dev \
          libffi-dev \
          libssl-dev

    - name: Install Python dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        pip install pytest-cov
        
    - name: Create .env.test file
      working-directory: ./backend
      run: |
        echo "TEST_POSTGRES_USER=${{ secrets.TEST_POSTGRES_USER }}" >> .env.test
        echo "TEST_POSTGRES_PASSWORD=${{ secrets.TEST_POSTGRES_PASSWORD }}" >> .env.test
        echo "TEST_POSTGRES_HOST=postgres" >> .env.test
        echo "TEST_POSTGRES_PORT=5432" >> .env.test
        echo "TEST_POSTGRES_DB=${{ secrets.TEST_POSTGRES_DB }}" >> .env.test
        echo "TEST_SECRET_KEY=test-secret-key-1234" >> .env.test
    - name: Run tests
      working-directory: ./backend
      env:
        PYTHONPATH: ${{ github.workspace }}/backend
      run: |
        pytest tests/ -v --cov=./ --cov-report=xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}